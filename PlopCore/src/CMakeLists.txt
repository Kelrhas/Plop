cmake_minimum_required(VERSION 3.16)

set(SOURCE_FILES
		"Application.cpp"
		"FileWatcher.cpp"
		"TimeStep.cpp"
		"Assets/SoundLoader.cpp"
		"Assets/SpritesheetLoader.cpp"
		"Assets/TextureLoader.cpp"
		"Audio/AudioManager.cpp"
		"Audio/Sound.cpp"
		"Camera/Camera.cpp"
		"Camera/Camera2DController.cpp"
		"Debug/Debug.cpp"
		"Debug/ImGuiLayer.cpp"
		"Debug/ImGuiPlatform.cpp"
		"Debug/Log.cpp"
		"ECS/ComponentManager.cpp"
		"ECS/ECSHelper.cpp"
		"ECS/Entity.cpp"
		"ECS/LevelBase.cpp"
		"ECS/ParticleSpawners.cpp"
		"ECS/PrefabManager.cpp"
		"ECS/Components/BaseComponents.cpp"
		"ECS/Components/Component_AudioEmitter.cpp"
		"ECS/Components/Component_Camera.cpp"
		"ECS/Components/Component_ParticleSystem.cpp"
		"ECS/Components/Component_Physics.cpp"
		"ECS/Components/Component_PrefabInstance.cpp"
		"ECS/Components/Component_SpriteRenderer.cpp"
		"ECS/Components/Component_Transform.cpp"
		"Editor/Console.cpp"
		"Editor/EditorCamera.cpp"
		"Editor/EditorLayer.cpp"
		"Editor/UndoManager.cpp"
		"Events/EntityEvent.cpp"
		"Events/EventDispatcher.cpp"
		"Events/WindowEvent.cpp"
		"Input/Input.cpp"
		"Math/Curves.cpp"
		"Platform/OpenGL/OpenGL_Buffers.cpp"
		"Platform/OpenGL/OpenGL_Debug.cpp"
		"Platform/OpenGL/OpenGL_FrameBuffer.cpp"
		"Platform/OpenGL/OpenGL_Renderer.cpp"
		"Platform/OpenGL/OpenGL_Shader.cpp"
		"Platform/OpenGL/OpenGL_Texture.cpp"
		"Platform/OpenGL/OpenGL_VertexArray.cpp"
		"Platform/OpenGL/OpenGLWin32_Context.cpp"
		"Platform/Win32/Win32_Input.cpp"
		"Platform/Win32/Win32_OSDialogs.cpp"
		"Platform/Win32/Win32_Window.cpp"
		"Renderer/Buffers.cpp"
		"Renderer/FrameBuffer.cpp"
		"Renderer/RenderContext.cpp"
		"Renderer/Renderer.cpp"
		"Renderer/Shader.cpp"
		"Renderer/Sprite.cpp"
		"Renderer/Spritesheet.cpp"
		"Renderer/Texture.cpp"
		"Renderer/VertexArray.cpp"
		"Utils/DirectoryWatcher.cpp"
		"Utils/GUID.cpp"
		"Utils/imgui_custom.cpp"
		"Utils/JsonTypes.cpp"
		"Utils/Random.cpp"
		"Utils/Utils.cpp"
)

set(HEADER_FILES
		"Application.h"
		"ApplicationLayer.h"
		"Config.h"
		"Constants.h"
		"FileWatcher.h"
		"PlopInclude.h"
		"TimeStep.h"
		"Types.h"
		"Window.h"
		"Assets/Asset.h"
		"Assets/SoundLoader.h"
		"Assets/SpritesheetLoader.h"
		"Assets/TextureLoader.h"
		"Audio/AudioManager.h"
		"Audio/Sound.h"
		"Camera/Camera.h"
		"Camera/Camera2DController.h"
		"Debug/Debug.h"
		"Debug/ImGuiLayer.h"
		"Debug/Log.h"
		"Debug/MemoryTrack.hpp"
		"ECS/ComponentManager.h"
		"ECS/ECSHelper.h"
		"ECS/Entity.h"
		"ECS/Entity.inl"
		"ECS/EntityFlag.h"
		"ECS/LevelBase.h"
		"ECS/ParticleSpawners.h"
		"ECS/PrefabManager.h"
		"ECS/Serialisation.h"
		"ECS/Components/BaseComponents.h"
		"ECS/Components/Component_AudioEmitter.h"
		"ECS/Components/Component_Camera.h"
		"ECS/Components/Component_ParticleSystem.h"
		"ECS/Components/Component_Physics.h"
		"ECS/Components/Component_PrefabInstance.h"
		"ECS/Components/Component_SpriteRenderer.h"
		"ECS/Components/Component_Transform.h"
		"ECS/Components/ComponentDefinition.h"
		"ECS/Components/ComponentIncludes.h"
		"ECS/Components/ComponentList.h"
		"Editor/Console.h"
		"Editor/EditorCamera.h"
		"Editor/EditorLayer.h"
		"Editor/EditorStyle.h"
		"Editor/UndoManager.h"
		"Events/EntityEvent.h"
		"Events/Event.h"
		"Events/EventDispatcher.h"
		"Events/GameEvent.h"
		"Events/IEventListener.h"
		"Events/WindowEvent.h"
		"Input/Input.h"
		"Input/InputKeyCodes.h"
		"Math/Curves.h"
		"Math/Math.h"
		"Platform/OpenGL/OpenGL_Buffers.h"
		"Platform/OpenGL/OpenGL_Debug.h"
		"Platform/OpenGL/OpenGL_FrameBuffer.h"
		"Platform/OpenGL/OpenGL_Renderer.h"
		"Platform/OpenGL/OpenGL_Shader.h"
		"Platform/OpenGL/OpenGL_Texture.h"
		"Platform/OpenGL/OpenGL_VertexArray.h"
		"Platform/OpenGL/OpenGLWin32_Context.h"
		"Platform/Win32/Win32_Window.h"
		"Renderer/Buffers.h"
		"Renderer/FrameBuffer.h"
		"Renderer/Mesh.h"
		"Renderer/RenderContext.h"
		"Renderer/Renderer.h"
		"Renderer/RendererConfig.h"
		"Renderer/Shader.h"
		"Renderer/Sprite.h"
		"Renderer/SpriteFwd.h"
		"Renderer/Spritesheet.h"
		"Renderer/Texture.h"
		"Renderer/VertexArray.h"
		"Utils/DirectoryWatcher.h"
		"Utils/EnumFlags.h"
		"Utils/GUID.h"
		"Utils/imgui_custom.h"
		"Utils/JsonTypes.h"
		"Utils/OSDialogs.h"
		"Utils/Random.h"
		"Utils/StringUtils.h"
		"Utils/Utils.h"
)

# List all source files (and headers for IDE)
target_sources(PlopCore PRIVATE
	${SOURCE_FILES}
	${HEADER_FILES}
)

# Make the source list available for parent, to be used in source_group
foreach(src ${HEADER_FILES})
    list(APPEND TMP "${CMAKE_CURRENT_SOURCE_DIR}/${src}")
endforeach()
set(HEADER_FILES_PARENT ${TMP} PARENT_SCOPE)

set(TMP "")
foreach(src ${SOURCE_FILES})
    list(APPEND TMP "${CMAKE_CURRENT_SOURCE_DIR}/${src}")
endforeach()
set(SOURCE_FILES_PARENT ${TMP} PARENT_SCOPE)

# Add include directory
# target_include_directories(Plop PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
